Index: src/Service/MemMenuS.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package javaproject.Service;\r\n\r\nimport javaproject.chat.gui.ChatClient;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.sql.SQLException;\r\nimport javaproject.urlTool;\r\n\r\n\r\npublic class MemMenuS extends JFrame implements ActionListener {\r\n\r\n    urlTool utool = new urlTool();\r\n\r\n    private final ImageIcon image = utool.getImageIcon(\"/javaproject/resource/images/map.jpg\");\r\n\r\n\r\n//    private final Image image = new ImageIcon(\"resource/images/map.jpg\").getImage();\r\n\r\n\r\n\r\n    private final ImageIcon image2 = utool.getImageIcon(\"/javaproject/resource/images/menubutton2.PNG\");\r\n    private String id;\r\n    private LoginS LoginS;\r\n    private JPanel jpImage = new JPanel() {\r\n        public void paint(Graphics g) {\r\n            super.paint(g);\r\n            g.drawImage(image.getImage(), 0, 0, getWidth(), getHeight(), null);\r\n            this.setOpaque(false);\r\n            super.paintComponents(g);\r\n        }\r\n    };\r\n    private JPanel jpImage2 = new JPanel() {\r\n        public void paint(Graphics g) {\r\n            super.paint(g);\r\n            g.drawImage(image2.getImage(), 0, 0, getWidth(), getHeight(), null);\r\n            this.setOpaque(false);\r\n            super.paintComponents(g);\r\n        }\r\n    };\r\n    MemMenuS m = this;\r\n\r\n    public static void main(String[] args) {\r\n        new MemMenuS(null, null);\r\n    }\r\n\r\n    public MemMenuS(String id, LoginS before) {\r\n        this.LoginS = before;\r\n        this.id = id;\r\n        this.setTitle(\"정규랜드 지도\");\r\n        this.setSize(1200, 7000);\r\n        this.setLocation(0, 0);\r\n        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        this.setResizable(false);\r\n        this.add(jpImage);\r\n\r\n        jpImage.setLayout(null);\r\n\r\n        jpImage2.setBounds(380,0,500,40);\r\n        jpImage.add(jpImage2);\r\n        this.setVisible(true);\r\n        add();\r\n        mouseCheck();\r\n        reservationBnt();\r\n        logManageBnt();\r\n        logoutBnt();\r\n        ticketBnt();\r\n        talkBut();\r\n\r\n        this.addWindowListener(\r\n                new WindowAdapter() {\r\n                    public void windowClosing(WindowEvent e) {\r\n                        before.setEnabled(true);\r\n                        before.toFront();\r\n                        before.setFocusable(true);\r\n                        before.requestFocusInWindow();\r\n                    }\r\n                }\r\n        );\r\n\r\n    }\r\n\r\n    public void add() {\r\n        System.out.println(\"oooooo\");\r\n        addButton2(\"\", 0, 0, 1, 1);\r\n        addButton2(\"\", 2, 2, 1, 1);\r\n        addButton2(\"\", 3, 3, 1, 1);\r\n        addButton2(\"\", 6, 6, 1, 1);\r\n        addButton2(\"\", 8, 8, 1, 1);\r\n        addButton2(\"\", 10, 10, 1, 1);\r\n\r\n\r\n        addButton2(\"t익스\", 496, 195, 67, 40);\r\n        addButton2(\"롤링\", 715, 404, 72, 40);\r\n        addButton2(\"콜롬버스\", 938, 433, 72, 40);\r\n        addButton2(\"범퍼\", 730, 282, 54, 40);\r\n        addButton2(\"이솝\", 851, 359, 68, 40);\r\n        addButton2(\"썬더폴스\", 845, 249, 55, 40);\r\n        addButton2(\"사파리\", 333, 473, 66, 40);\r\n        addButton2(\"lost\", 364, 685, 64, 38);\r\n        addButton2(\"더블락\", 669, 556, 69, 40);\r\n        addButton2(\"버드\", 589, 720, 74, 40);\r\n        addButton2(\"판다\", 604, 496, 60, 40);\r\n        addButton2(\"애니멀원더 월드\", 525, 614, 78, 40);\r\n        addButton2(\"씨라이언\", 443, 681, 78, 39);\r\n        addButton2(\"애니멀원더 스테이지\", 514, 474, 83, 40);\r\n        addButton2(\"카니발광장\", 488, 385, 67, 39);\r\n\r\n    }\r\n\r\n    public void logoutBnt() {\r\n        JButton obnt = new JButton(\"\");\r\n        obnt.setBounds(776, 2, 100, 35);\r\n        obnt.setVisible(true);\r\n        obnt.setBorder(BorderFactory.createEmptyBorder());\r\n        obnt.setContentAreaFilled(false);\r\n\r\n\r\n        obnt.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                System.out.println(\"연결해야댐\");\r\n                dispose();\r\n                LoginS.setVisible(true);\r\n            }\r\n        });\r\n        jpImage.add(obnt);\r\n    }\r\n\r\n    private void talkBut() {\r\n        JButton cbnt = new JButton(\"\");\r\n        cbnt.setBounds(676, 2, 100, 35);\r\n        cbnt.setVisible(true);\r\n        cbnt.setBorder(BorderFactory.createEmptyBorder());\r\n        cbnt.setContentAreaFilled(false);\r\n\r\n\r\n        cbnt.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                System.out.println(\"연결해야댐\");\r\n                new ChatClient(\"고객\");\r\n            }\r\n        });\r\n        jpImage.add(cbnt);\r\n    }\r\n\r\n    public void reservationBnt() {\r\n        JButton rbnt = new JButton(\"\");\r\n        rbnt.setBounds(576, 2, 100, 35);\r\n        rbnt.setVisible(true);\r\n        rbnt.setBorder(BorderFactory.createEmptyBorder());\r\n        rbnt.setContentAreaFilled(false);\r\n\r\n\r\n        rbnt.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                System.out.println(\"연결해야댐\");\r\n                new MemReservationS(id, m);\r\n\r\n            }\r\n        });\r\n        jpImage.add(rbnt);\r\n    }\r\n\r\n    public void ticketBnt() {\r\n        JButton tbnt = new JButton(\"티켓구매\");\r\n        tbnt.setBounds(476, 2, 100, 35);\r\n        tbnt.setVisible(true);\r\n        tbnt.setBorder(BorderFactory.createEmptyBorder());\r\n        tbnt.setContentAreaFilled(false);\r\n\r\n        tbnt.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n\r\n                try {\r\n                    new MemTicketS(id);\r\n                } catch (SQLException ex) {\r\n                    throw new RuntimeException(ex);\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n        jpImage.add(tbnt);\r\n    }\r\n\r\n    public void logManageBnt() {\r\n        JButton lbnt = new JButton(\"회원정보수정\");\r\n        lbnt.setBounds(376, 2, 100, 35);\r\n        lbnt.setVisible(true);\r\n        lbnt.setBorder(BorderFactory.createEmptyBorder());\r\n        lbnt.setContentAreaFilled(false);\r\n\r\n        lbnt.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent\r\n                                                e) {\r\n                System.out.println(\"연결해야댐\");\r\n                new MemS(id, m);\r\n\r\n            }\r\n\r\n            ;\r\n        });\r\n\r\n        jpImage.add(lbnt);\r\n    }\r\n\r\n    public void mouseCheck() {\r\n        jpImage.addMouseListener(new MouseAdapter() {\r\n            @Override\r\n            public void mousePressed(MouseEvent e) {\r\n                int mouseX = e.getX();\r\n                int mouseY = e.getY();\r\n                System.out.println(\"마우스 클릭 좌표: X = \" + mouseX + \", Y = \" + mouseY);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void addButton2(String name, int x, int y, int width, int height) {\r\n        OutlineButton outbnt = new OutlineButton(width, height, name);\r\n        outbnt.setBounds(x, y, width, height);\r\n        jpImage.add(outbnt);\r\n        outbnt.addActionListener(createButtonListener(name));\r\n//        JButton jbnt = new JButton();\r\n//        jbnt.setText(\"\");\r\n//        jbnt.setBounds(x, y, width, height);\r\n//        jbnt.setBorder(BorderFactory.createEmptyBorder());\r\n//        jbnt.setContentAreaFilled(false);\r\n//        jpImage.add(jbnt);\r\n//        jbnt.addActionListener(createButtonListener(name));\r\n\r\n\r\n    }\r\n\r\n    private ActionListener createButtonListener(String rideName) {\r\n        return new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                // 클릭된 버튼을 가져옴\r\n                JButton clickedButton = (JButton) e.getSource();  // 클릭된 버튼 객체\r\n                System.out.println(\"클릭된 버튼: \" + clickedButton);  // 버튼 객체\r\n\r\n                System.out.println(\"놀이기구 이름: \" + rideName);\r\n                try {\r\n                    System.out.println(\"ddddddddd\");\r\n                    new ReservationS(m, rideName, id);\r\n                } catch (SQLException ex) {\r\n                    System.out.println(\"aaaaaa\");\r\n                    throw new RuntimeException(ex);\r\n                }\r\n\r\n//               임시 sendDataToTeamMember(rideName, rideId, clickedButton);  // 정진형한테 전달\r\n\r\n            }\r\n        };\r\n    }\r\n\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n\r\n\r\n    }\r\n\r\n\r\n    class OutlineButton extends JButton {\r\n        //     private final Color background = Color.RED; // 클릭 전 색깔\r\n        private final Color foreground = Color.RED; // 클릭 후 색깔\r\n        private final Color inlineColor = new Color(0, 0, 0, 0); // 투명색\r\n\r\n        int paddingWidth, paddingHeight;\r\n\r\n        public OutlineButton(int paddingWidth, int paddingHeight, String text) {\r\n            this.paddingWidth = paddingWidth;\r\n            this.paddingHeight = paddingHeight;\r\n            setText(text);\r\n\r\n            Dimension dimension = getPreferredSize();\r\n//            System.out.println((int) dimension.getWidth());\r\n//            System.out.println((int) dimension.getHeight());\r\n//            int w = (int) dimension.getWidth() + paddingWidth * 2;\r\n//            int h = (int) dimension.getHeight() + paddingHeight * 2;\r\n            int w = paddingWidth + 6;\r\n            int h = paddingHeight + 5;\r\n\r\n            setPreferredSize(new Dimension(w, h));\r\n            setOpaque(false);\r\n            setBorder(null);\r\n            setBackground(inlineColor);\r\n            setForeground(inlineColor);\r\n            addMouseListener(new MouseAdapter() {\r\n                @Override\r\n                public void mouseEntered(MouseEvent e) {\r\n                    setBackground(inlineColor);\r\n                    setForeground(foreground);\r\n                    revalidate();\r\n                    repaint();\r\n                }\r\n\r\n                @Override\r\n                public void mouseExited(MouseEvent e) {\r\n                    setBackground(inlineColor);\r\n                    setForeground(inlineColor);\r\n                    revalidate();\r\n                    repaint();\r\n                }\r\n            });\r\n        }\r\n\r\n        @Override\r\n        public void paintComponent(Graphics g) {\r\n            Graphics2D g2 = (Graphics2D) g;\r\n            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\r\n\r\n            Dimension dimension = getPreferredSize();\r\n            int w = (int) dimension.getWidth() - 1;\r\n            int h = (int) dimension.getHeight() - 1;\r\n\r\n            if (getBackground() != null) {\r\n                g2.setColor(getBackground());\r\n                g2.fillRoundRect(1, 1, (int) (w - 1 / 3.5), (int) (h - 1 / 2.8), 35, 35);\r\n            }\r\n\r\n            g2.setColor(getForeground());\r\n            g2.setStroke(new BasicStroke(3)); // 선 두께\r\n            g2.drawRoundRect(3, 3, w - 10, h - 10, 35, 35); // width, height 곡률과 관련있음\r\n\r\n//            g2.setColor(getForeground());\r\n//            g2.setFont(new Font(\"맑은 고딕\", 1, 18));\r\n\r\n//            FontMetrics fontMetrics = g2.getFontMetrics();\r\n//            Rectangle rectangle = fontMetrics.getStringBounds(getText(), g2).getBounds();\r\n\r\n//            g2.drawString(getText(), (w - rectangle.width) / 2, (h - rectangle.height) / 2 + fontMetrics.getAscent());\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Service/MemMenuS.java b/src/Service/MemMenuS.java
--- a/src/Service/MemMenuS.java	(revision f2c61de9551b47c9ef640490d6110c878785beb8)
+++ b/src/Service/MemMenuS.java	(date 1743484937013)
@@ -230,14 +230,6 @@
         outbnt.setBounds(x, y, width, height);
         jpImage.add(outbnt);
         outbnt.addActionListener(createButtonListener(name));
-//        JButton jbnt = new JButton();
-//        jbnt.setText("");
-//        jbnt.setBounds(x, y, width, height);
-//        jbnt.setBorder(BorderFactory.createEmptyBorder());
-//        jbnt.setContentAreaFilled(false);
-//        jpImage.add(jbnt);
-//        jbnt.addActionListener(createButtonListener(name));
-
 
     }
 
@@ -258,7 +250,6 @@
                     throw new RuntimeException(ex);
                 }
 
-//               임시 sendDataToTeamMember(rideName, rideId, clickedButton);  // 정진형한테 전달
 
             }
         };
@@ -284,10 +275,7 @@
             setText(text);
 
             Dimension dimension = getPreferredSize();
-//            System.out.println((int) dimension.getWidth());
-//            System.out.println((int) dimension.getHeight());
-//            int w = (int) dimension.getWidth() + paddingWidth * 2;
-//            int h = (int) dimension.getHeight() + paddingHeight * 2;
+
             int w = paddingWidth + 6;
             int h = paddingHeight + 5;
 
@@ -333,13 +321,7 @@
             g2.setStroke(new BasicStroke(3)); // 선 두께
             g2.drawRoundRect(3, 3, w - 10, h - 10, 35, 35); // width, height 곡률과 관련있음
 
-//            g2.setColor(getForeground());
-//            g2.setFont(new Font("맑은 고딕", 1, 18));
 
-//            FontMetrics fontMetrics = g2.getFontMetrics();
-//            Rectangle rectangle = fontMetrics.getStringBounds(getText(), g2).getBounds();
-
-//            g2.drawString(getText(), (w - rectangle.width) / 2, (h - rectangle.height) / 2 + fontMetrics.getAscent());
         }
     }
 }
Index: src/chat/gui/ChatGUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package javaproject.chat.gui;\r\n\r\nimport lombok.SneakyThrows;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.EmptyBorder;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.io.*;\r\nimport java.net.ConnectException;\r\nimport java.net.Socket;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\n\r\npublic class ChatGUI {\r\n\r\n    private JFrame frame;\r\n    private JTextField nameField;\r\n    private JTextArea chatArea;\r\n    private JTextField messageField;\r\n    private JButton sendButton;\r\n    private JButton exitButton;\r\n    private JButton matchButton;\r\n    private JLabel statusLabel;\r\n    private DataOutputStream output;\r\n    private DataInputStream input;\r\n    private String role;\r\n    private String inquiryType;\r\n    private Socket socket;\r\n    public boolean closed = false;\r\n\r\n    public ChatGUI(String serverAddress, int port, String role) {\r\n        this.role = role;\r\n        initialize(serverAddress, port);\r\n        connectToServer(serverAddress, port);\r\n    }\r\n\r\n    private void initialize(String serverAddress, int port) {\r\n        frame = new JFrame(\"정규랜드 고객센터\");\r\n        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\r\n        frame.setSize(400, 700);\r\n        frame.setLayout(new BorderLayout());\r\n        frame.setBackground(new Color(255, 255, 255));\r\n\r\n\r\n        JPanel headerPanel = new JPanel(new BorderLayout());\r\n        headerPanel.setBackground(new Color(255, 229, 0)); // 카카오톡 노란색\r\n        headerPanel.setBorder(new EmptyBorder(10, 10, 10, 10));\r\n        headerPanel.setPreferredSize(new Dimension(400, 60));\r\n\r\n        JLabel titleLabel = new JLabel(\"정규랜드 고객센터 [\" + role + \"]\", SwingConstants.CENTER);\r\n        titleLabel.setFont(new Font(\"맑은 고딕\", Font.BOLD, 16));\r\n        titleLabel.setForeground(Color.BLACK);\r\n        headerPanel.add(titleLabel, BorderLayout.CENTER);\r\n\r\n        statusLabel = new JLabel(\"연결 대기중입니다\", SwingConstants.CENTER);\r\n        statusLabel.setFont(new Font(\"맑은 고딕\", Font.PLAIN, 12));\r\n        statusLabel.setForeground(Color.GRAY);\r\n        headerPanel.add(statusLabel, BorderLayout.SOUTH);\r\n\r\n        // 입력 패널 (이름, 문의 유형, 매칭 버튼)\r\n        JPanel inputPanel = new JPanel();\r\n        inputPanel.setLayout(new BoxLayout(inputPanel, BoxLayout.Y_AXIS));\r\n        inputPanel.setBorder(new EmptyBorder(10, 10, 10, 10));\r\n        inputPanel.setBackground(Color.WHITE);\r\n\r\n        // 이름 입력\r\n        JPanel namePanel = new JPanel(new FlowLayout(FlowLayout.LEFT));\r\n        namePanel.setBackground(Color.WHITE);\r\n        namePanel.add(new JLabel(\"이름: \"));\r\n        nameField = new JTextField(15);\r\n        nameField.setFont(new Font(\"맑은 고딕\", Font.PLAIN, 14));\r\n        nameField.setBorder(BorderFactory.createLineBorder(new Color(200, 200, 200)));\r\n        namePanel.add(nameField);\r\n        inputPanel.add(namePanel);\r\n\r\n        // 문의 유형 선택\r\n        JPanel inquiryPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));\r\n        inquiryPanel.setBackground(Color.WHITE);\r\n        inquiryPanel.add(new JLabel(\"문의 유형: \"));\r\n        JRadioButton reservationButton = new JRadioButton(\"예약 관련 문의\");\r\n        JRadioButton lostButton = new JRadioButton(\"분실물 문의\");\r\n        JRadioButton otherButton = new JRadioButton(\"기타 문의\");\r\n        ButtonGroup inquiryGroup = new ButtonGroup();\r\n        inquiryGroup.add(reservationButton);\r\n        inquiryGroup.add(lostButton);\r\n        inquiryGroup.add(otherButton);\r\n        styleRadioButton(reservationButton);\r\n        styleRadioButton(lostButton);\r\n        styleRadioButton(otherButton);\r\n        inquiryPanel.add(reservationButton);\r\n        inquiryPanel.add(lostButton);\r\n        inquiryPanel.add(otherButton);\r\n        inputPanel.add(inquiryPanel);\r\n\r\n        // 매칭 대기 버튼\r\n        matchButton = new JButton(\"매칭 대기\");\r\n        matchButton.setEnabled(false);\r\n        styleButton(matchButton, new Color(255, 199, 0), Color.BLACK, 120, 40);\r\n        JPanel matchPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));\r\n        matchPanel.setBackground(Color.WHITE);\r\n        matchPanel.add(matchButton);\r\n        inputPanel.add(matchPanel);\r\n\r\n        // 채팅 영역\r\n        chatArea = new JTextArea();\r\n        chatArea.setEditable(false);\r\n        chatArea.setFont(new Font(\"맑은 고딕\", Font.PLAIN, 14));\r\n        chatArea.setBackground(new Color(245, 245, 245));\r\n        chatArea.setBorder(new EmptyBorder(10, 10, 10, 10));\r\n        JScrollPane chatScroll = new JScrollPane(chatArea);\r\n        chatScroll.setBorder(null);\r\n//        chatArea.setLineWrap(true);\r\n//        chatScroll.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);\r\n\r\n\r\n        JPanel bottomPanel = new JPanel(new BorderLayout());\r\n        bottomPanel.setBackground(Color.WHITE);\r\n        bottomPanel.setBorder(new EmptyBorder(10, 10, 10, 10));\r\n\r\n        messageField = new JTextField();\r\n        messageField.setFont(new Font(\"맑은 고딕\", Font.PLAIN, 14));\r\n        messageField.setBorder(BorderFactory.createLineBorder(new Color(200, 200, 200)));\r\n\r\n        sendButton = new JButton(\"전송\");\r\n        styleButton(sendButton, new Color(255, 199, 0), Color.BLACK, 60, 40);\r\n\r\n        exitButton = new JButton(\"종료\");\r\n        styleButton(exitButton, new Color(200, 200, 200), Color.BLACK, 60, 40);\r\n\r\n        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT, 5, 0));\r\n        buttonPanel.setBackground(Color.WHITE);\r\n        buttonPanel.add(sendButton);\r\n        buttonPanel.add(exitButton);\r\n\r\n        bottomPanel.add(messageField, BorderLayout.CENTER);\r\n        bottomPanel.add(buttonPanel, BorderLayout.EAST);\r\n\r\n\r\n      \r\n        frame.add(inputPanel, BorderLayout.NORTH); // 이름, 문의 유형, 매칭 버튼 영역\r\n        frame.add(chatScroll, BorderLayout.CENTER); // 채팅창\r\n        frame.add(bottomPanel, BorderLayout.SOUTH); // 메시지 입력 및 버튼\r\n\r\n\r\n        matchButton.addActionListener(e -> startMatching());\r\n        exitButton.addActionListener(e -> {\r\n            closed = true; // 닫힘 플래그 설정\r\n            if (socket != null && !socket.isClosed()) { // 서버 연결 확인\r\n                sendMessage(); // 연결된 경우에만 메시지 전송\r\n            }\r\n            closeResources(); // 리소스 정리\r\n            frame.dispose(); // 창 닫기\r\n        });\r\n        reservationButton.addActionListener(e -> {\r\n            inquiryType = \"예약 관련 문의\";\r\n            checkIfReadyToMatch();\r\n        });\r\n        lostButton.addActionListener(e -> {\r\n            inquiryType = \"분실물 문의\";\r\n            checkIfReadyToMatch();\r\n        });\r\n        otherButton.addActionListener(e -> {\r\n            inquiryType = \"기타 문의\";\r\n            checkIfReadyToMatch();\r\n        });\r\n        sendButton.addActionListener(e -> sendMessage());\r\n        messageField.addActionListener(e -> sendMessage());\r\n\r\n        frame.addWindowListener(new WindowAdapter() {\r\n            @Override\r\n            public void windowClosing(WindowEvent e) {\r\n                closed = true;\r\n                sendMessage();\r\n                closeResources();\r\n            }\r\n        });\r\n\r\n\r\n        frame.setVisible(true);\r\n    }\r\n\r\n    private void styleButton(JButton button, Color bgColor, Color fgColor, int width, int height) {\r\n        button.setBackground(bgColor);\r\n        button.setForeground(fgColor);\r\n        button.setFont(new Font(\"맑은 고딕\", Font.BOLD, 14));\r\n        button.setPreferredSize(new Dimension(width, height));\r\n        button.setFocusPainted(false);\r\n        button.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));\r\n        button.setOpaque(true);\r\n        button.setCursor(new Cursor(Cursor.HAND_CURSOR));\r\n        button.addMouseListener(new java.awt.event.MouseAdapter() {\r\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\r\n                button.setBackground(bgColor.brighter());\r\n            }\r\n            public void mouseExited(java.awt.event.MouseEvent evt) {\r\n                button.setBackground(bgColor);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void styleRadioButton(JRadioButton radio) {\r\n        radio.setFont(new Font(\"맑은 고딕\", Font.PLAIN, 12));\r\n        radio.setBackground(Color.WHITE);\r\n        radio.setFocusPainted(false);\r\n    }\r\n    Thread t=null;\r\n    private void connectToServer(String serverAddress, int port) {\r\n        try {\r\n            socket = new Socket(serverAddress, port);\r\n            output = new DataOutputStream(socket.getOutputStream());\r\n            input = new DataInputStream(socket.getInputStream());\r\n\r\n            statusLabel.setText(\"연결되었습니다\");\r\n\r\n            new Thread(new Runnable() {\r\n                @SneakyThrows\r\n                @Override\r\n                public void run() {\r\n                    try {\r\n\r\n\r\n                        System.out.println(\"시작\");\r\n                        while (true) {\r\n\r\n                            String message = input.readUTF();\r\n                            chatArea.append(message + \"\\n\");\r\n                        }\r\n                    }\r\n                    catch (EOFException e) {\r\n                        System.out.println(\"예외 : \" + e);\r\n                        statusLabel.setText(\"서버 연결 끊어짐\");\r\n                    } catch (IOException e) {\r\n                        System.out.println(\"예외 발생: \" + e);\r\n                        statusLabel.setText(\"네트워크 오류 발생\");\r\n                    } finally {\r\n                        closeResources();\r\n                    }\r\n                }\r\n            }).start();\r\n\r\n        }catch (ConnectException e){\r\n            JOptionPane.showMessageDialog(null,\"서버연결 불가능\");\r\n            frame.dispose();\r\n           //\r\n        } catch (IOException e) {\r\n            statusLabel.setText(\"서버 연결 실패\");\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void closeResources() {\r\n        try {\r\n            if (input != null) input.close();\r\n        } catch (IOException e) {\r\n            System.out.println(\"input 닫기 실패\");\r\n            e.printStackTrace();\r\n        }\r\n        try {\r\n            if (output != null) output.close();\r\n        } catch (IOException e) {\r\n            System.out.println(\"output 닫기 실패\");\r\n            e.printStackTrace();\r\n        }\r\n        try {\r\n            if (socket != null) socket.close();\r\n            System.out.println(\"성공이요\");\r\n        } catch (IOException e) {\r\n            System.out.println(\"socket 닫기 실패\");\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void startMatching() {\r\n        String name = nameField.getText().trim();\r\n        if (name.isEmpty() || role == null || inquiryType == null) {\r\n            JOptionPane.showMessageDialog(frame, \"이름,문의 유형을 모두 선택하세요.\");\r\n            return;\r\n        }\r\n\r\n        statusLabel.setText(\"매칭 대기중...\");\r\n        matchButton.setEnabled(false);\r\n\r\n        try {\r\n            output.writeUTF(role);\r\n            output.flush();\r\n\r\n            output.writeUTF(name);\r\n            output.flush();\r\n\r\n            output.writeUTF(inquiryType);\r\n            output.flush();\r\n\r\n\r\n        } catch (IOException e) {\r\n            JOptionPane.showMessageDialog(frame, \"서버 전송 실패\");\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n    private void checkIfReadyToMatch() {\r\n        if (role != null && inquiryType != null) {\r\n            matchButton.setEnabled(true);\r\n        }\r\n    }\r\n\r\n    private void sendMessage() {\r\n        String name = nameField.getText().trim();\r\n        String message = messageField.getText().trim();\r\n        if (name.isEmpty() || role == null || inquiryType == null) {\r\n            JOptionPane.showMessageDialog(frame, \"이름, 역할, 문의 유형, 메시지를 모두 입력하세요.\");\r\n            return;\r\n        }\r\n        if (closed) {\r\n            message = \"/exit\";\r\n        }\r\n\r\n        String timestamp = new SimpleDateFormat(\"HH:mm\").format(new Date());\r\n        String formattedMessage = String.format(\"%s [%s]: %s\", timestamp, name, message);\r\n\r\n        chatArea.append(formattedMessage + \"\\n\");\r\n        messageField.setText(\"\");\r\n\r\n        try {\r\n            output.writeUTF(message);\r\n            output.flush();\r\n        } catch (IOException ex) {\r\n            ex.printStackTrace();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/chat/gui/ChatGUI.java b/src/chat/gui/ChatGUI.java
--- a/src/chat/gui/ChatGUI.java	(revision f2c61de9551b47c9ef640490d6110c878785beb8)
+++ b/src/chat/gui/ChatGUI.java	(date 1743485916047)
@@ -110,9 +110,6 @@
         chatArea.setBorder(new EmptyBorder(10, 10, 10, 10));
         JScrollPane chatScroll = new JScrollPane(chatArea);
         chatScroll.setBorder(null);
-//        chatArea.setLineWrap(true);
-//        chatScroll.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
-
 
         JPanel bottomPanel = new JPanel(new BorderLayout());
         bottomPanel.setBackground(Color.WHITE);
Index: src/chat/server/Session.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package javaproject.chat.server;\r\n\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\nimport lombok.SneakyThrows;\r\n\r\nimport java.io.DataInputStream;\r\nimport java.io.DataOutputStream;\r\nimport java.io.IOException;\r\nimport java.net.Socket;\r\nimport java.util.Scanner;\r\n\r\nimport static javaproject.chat.util.MyLogger.log;\r\nimport static javaproject.chat.util.MyLogger.log1;\r\nimport static javaproject.chat.util.SocketCloseUtil.closeAll;\r\n\r\n@Getter\r\n@Setter\r\npublic class Session implements Runnable {\r\n    Scanner in = new Scanner(System.in);\r\n    private final Socket socket;\r\n    private final DataInputStream input;\r\n    private final DataOutputStream output;\r\n    private final CommandManager commandManager;\r\n    private SessionManager sessionManager;\r\n\r\n    private boolean closed = false;\r\n\r\n    private String username;\r\n    private Session adminSession;\r\n    private String role;//역할\r\n    @Setter\r\n    private Session matchedSession;\r\n    private String name;\r\n    private String type;\r\n    private boolean flag = true;\r\n\r\n    @SneakyThrows\r\n    public Session(Socket socket, CommandManager commandManager, SessionManager sessionManager) {\r\n        this.socket = socket;\r\n        this.input = new DataInputStream(socket.getInputStream());\r\n        this.output = new DataOutputStream(socket.getOutputStream());\r\n        this.commandManager = commandManager;\r\n        this.sessionManager = sessionManager;\r\n\r\n    }\r\n\r\n    @Override\r\n    public void run() throws RuntimeException {\r\n        try {\r\n\r\n\r\n            role = input.readUTF();\r\n\r\n            name = input.readUTF();\r\n\r\n            type = input.readUTF();\r\n\r\n            sessionManager.add(this);\r\n\r\n            while (true) {\r\n                String received = input.readUTF();\r\n                log(\"클라 -> 서버 : \" + received);\r\n\r\n\r\n                if (commandManager.execute(received, this)) {\r\n                   if(matchedSession != null) {\r\n                       matchedSession.setFlag(true);\r\n                       matchedSession.setMatchedSession(null);\r\n                       sessionManager.matchCustomerToAdmin(matchedSession);\r\n\r\n                       send(\"님이 퇴장하셨습니다.\");\r\n                   }\r\n                    sessionManager.remove(this);\r\n                    close();\r\n                } else {\r\n                    send(received);\r\n                }\r\n            }\r\n\r\n        } catch (IOException e) {\r\n            log(e);\r\n        }\r\n    }\r\n\r\n    public void send(String message) throws IOException {\r\n        if (matchedSession != null) {  // 상대방이 매칭되었을 때만 메세지 전송\r\n            log(\"클라 - > 클라 : \" + message);\r\n            matchedSession.getOutput().writeUTF(log1() + \"[\" + name + \"]\" + message);\r\n            matchedSession.getOutput().flush();\r\n\r\n        } else {\r\n            log(\"서버 - > 클라 : \" + message);\r\n            output.writeUTF(message);\r\n            output.flush();\r\n\r\n        }\r\n    }\r\n\r\n    public void close() {\r\n        if (closed) {\r\n            return;\r\n        }\r\n        closeAll(socket, input, output);\r\n        closed = true;\r\n        log(\"연결 종료 : \" + socket);\r\n\r\n    }\r\n\r\n    public boolean conn() {\r\n        try {\r\n            getOutput().writeUTF(\"시작\");\r\n            getOutput().flush();\r\n            input.readUTF();\r\n            System.out.println(\"연결\");\r\n            return true;\r\n        }catch (Exception e){\r\n            System.out.println(\"탈출\");\r\n        }\r\n        return false;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/chat/server/Session.java b/src/chat/server/Session.java
--- a/src/chat/server/Session.java	(revision f2c61de9551b47c9ef640490d6110c878785beb8)
+++ b/src/chat/server/Session.java	(date 1743485915992)
@@ -107,16 +107,4 @@
 
     }
 
-    public boolean conn() {
-        try {
-            getOutput().writeUTF("시작");
-            getOutput().flush();
-            input.readUTF();
-            System.out.println("연결");
-            return true;
-        }catch (Exception e){
-            System.out.println("탈출");
-        }
-        return false;
-    }
 }
Index: src/chat/gui/ChatClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package javaproject.chat.gui;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.io.*;\r\nimport java.net.Socket;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\n\r\npublic class ChatClient {\r\n\r\n\r\n    String serverAddress = \"192.168.0.18\"; // 서버 주소\r\n    int port = 4321; // 포트 번호\r\n    String role;\r\n\r\n    public ChatClient(String role) {\r\n        // GUI 초기화\r\n        this.role = role;\r\n        SwingUtilities.invokeLater(() -> new ChatGUI(serverAddress, port,role));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/chat/gui/ChatClient.java b/src/chat/gui/ChatClient.java
--- a/src/chat/gui/ChatClient.java	(revision f2c61de9551b47c9ef640490d6110c878785beb8)
+++ b/src/chat/gui/ChatClient.java	(date 1743485916008)
@@ -13,11 +13,9 @@
 
     String serverAddress = "192.168.0.18"; // 서버 주소
     int port = 4321; // 포트 번호
-    String role;
 
     public ChatClient(String role) {
         // GUI 초기화
-        this.role = role;
         SwingUtilities.invokeLater(() -> new ChatGUI(serverAddress, port,role));
     }
 }
\ No newline at end of file
Index: src/chat/server/Server.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package javaproject.chat.server;\r\n\r\n\r\nimport java.io.IOException;\r\nimport java.net.ServerSocket;\r\nimport java.net.Socket;\r\n\r\nimport static javaproject.chat.util.MyLogger.log;\r\n\r\npublic class Server {\r\n    private final int port;\r\n    private final CommandManager commandManager;\r\n    private final SessionManager sessionManager;\r\n\r\n    private ServerSocket serverSocket;\r\n\r\n    public Server(int port, CommandManager commandManager, SessionManager sessionManager) {\r\n        this.port = port;\r\n        this.commandManager = commandManager;\r\n        this.sessionManager = sessionManager;\r\n    }\r\n\r\n\r\n    public void start() throws IOException {\r\n        log(\"서버 시작: \" + commandManager.getClass());\r\n        serverSocket = new ServerSocket(port);\r\n        log(\"서버 소켓 시작- 리스닝 포트 : \" + port);\r\n\r\n\r\n        running();\r\n }\r\n\r\n    private void running() {\r\n        try {\r\n            while (true) {\r\n                Socket socket = serverSocket.accept();\r\n\r\n                Session session = new Session(socket, commandManager, sessionManager);\r\n                Thread thread = new Thread(session);\r\n                thread.start();\r\n            }\r\n        } catch (IOException e) {\r\n            log(\"서버 소켓종료 : \" + e);\r\n        }\r\n    }\r\n\r\n    private void addShutdownHook() {\r\n        ShutdownHook target = new ShutdownHook(serverSocket, sessionManager);\r\n        Runtime.getRuntime().addShutdownHook(new Thread(target, \"shutdown\"));\r\n    }\r\n\r\n    static class ShutdownHook implements Runnable {\r\n        private final ServerSocket serverSocket;\r\n        private final SessionManager sessionManager;\r\n\r\n        ShutdownHook(ServerSocket serverSocket, SessionManager sessionManager) {\r\n            this.serverSocket = serverSocket;\r\n            this.sessionManager = sessionManager;\r\n        }\r\n\r\n\r\n        @Override\r\n        public void run() {\r\n            log(\"shutdownHook 실행\");\r\n            try {\r\n                sessionManager.closeAll();\r\n                serverSocket.close();\r\n\r\n                Thread.sleep(1000);\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n                System.out.println(\"e: \" + e);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/chat/server/Server.java b/src/chat/server/Server.java
--- a/src/chat/server/Server.java	(revision f2c61de9551b47c9ef640490d6110c878785beb8)
+++ b/src/chat/server/Server.java	(date 1743485916030)
@@ -34,7 +34,6 @@
         try {
             while (true) {
                 Socket socket = serverSocket.accept();
-
                 Session session = new Session(socket, commandManager, sessionManager);
                 Thread thread = new Thread(session);
                 thread.start();
Index: src/chat/server/CommandManagerV2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package javaproject.chat.server;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class CommandManagerV2 implements CommandManager{\r\n    private static final String DELIMITER = \"\\\\|\";\r\n    private final SessionManager sessionManager;\r\n\r\n    public CommandManagerV2(SessionManager sessionManager) {\r\n        this.sessionManager = sessionManager;\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean execute(String totalMessage, Session session) throws IOException {\r\n\r\n        if (totalMessage.startsWith(\"/exit\")){\r\n\r\n            return  true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/chat/server/CommandManagerV2.java b/src/chat/server/CommandManagerV2.java
--- a/src/chat/server/CommandManagerV2.java	(revision f2c61de9551b47c9ef640490d6110c878785beb8)
+++ b/src/chat/server/CommandManagerV2.java	(date 1743484060245)
@@ -4,12 +4,6 @@
 
 public class CommandManagerV2 implements CommandManager{
     private static final String DELIMITER = "\\|";
-    private final SessionManager sessionManager;
-
-    public CommandManagerV2(SessionManager sessionManager) {
-        this.sessionManager = sessionManager;
-    }
-
 
     @Override
     public boolean execute(String totalMessage, Session session) throws IOException {
Index: src/chat/server/ServerMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package javaproject.chat.server;\r\n\r\n\r\n\r\nimport java.io.IOException;\r\n\r\npublic class ServerMain {\r\n\r\n    private  static final int PORT = 4321;\r\n\r\n    public static void main(String[] args) throws IOException {\r\n        SessionManager sessionManager = new SessionManager();\r\n\r\n        CommandManager commandManager = new CommandManagerV2(sessionManager);\r\n\r\n        Server server = new Server(PORT, commandManager, sessionManager);\r\n        server.start();\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/chat/server/ServerMain.java b/src/chat/server/ServerMain.java
--- a/src/chat/server/ServerMain.java	(revision f2c61de9551b47c9ef640490d6110c878785beb8)
+++ b/src/chat/server/ServerMain.java	(date 1743484060267)
@@ -11,7 +11,7 @@
     public static void main(String[] args) throws IOException {
         SessionManager sessionManager = new SessionManager();
 
-        CommandManager commandManager = new CommandManagerV2(sessionManager);
+        CommandManager commandManager = new CommandManagerV2();
 
         Server server = new Server(PORT, commandManager, sessionManager);
         server.start();
Index: src/chat/util/MyLoggerMain.java
===================================================================
diff --git a/src/chat/util/MyLoggerMain.java b/src/chat/util/MyLoggerMain.java
deleted file mode 100644
--- a/src/chat/util/MyLoggerMain.java	(revision f2c61de9551b47c9ef640490d6110c878785beb8)
+++ /dev/null	(revision f2c61de9551b47c9ef640490d6110c878785beb8)
@@ -1,8 +0,0 @@
-package javaproject.chat.util;
-
-public class MyLoggerMain {
-    public static void main(String[] args) {
-        MyLogger.log("hello thread");
-        MyLogger.log(123);
-    }
-}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ArtifactsWorkspaceSettings\">\r\n    <artifacts-to-build>\r\n      <artifact name=\"main:jar\" />\r\n    </artifacts-to-build>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"42c61ecd-fdd4-4c5d-89aa-f62a03fac6a9\" name=\"변경\" comment=\"03241250\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;kangeyoung&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/humanAmusementPark/humanAmusementParkProject.git&quot;,\r\n    &quot;accountId&quot;: &quot;ce997ee5-0cad-4086-9b1d-f0f67e5e2908&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2upXm7ZGCcqYNG5UXOAVtrjnHkp\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;true&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/hu-19/Desktop/main/src/resource&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/hu-19/Desktop/main/src/Main.java&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;아티팩트&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;project.propCompiler&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;,\r\n    &quot;애플리케이션.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;애플리케이션.Main1.executor&quot;: &quot;Run&quot;,\r\n    &quot;애플리케이션.MemMenuS.executor&quot;: &quot;Run&quot;,\r\n    &quot;애플리케이션.MemTicketS.executor&quot;: &quot;Run&quot;,\r\n    &quot;애플리케이션.MemTimeTableS.executor&quot;: &quot;Run&quot;,\r\n    &quot;애플리케이션.ServerMain.executor&quot;: &quot;Run&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\hu-19\\Desktop\\main\\src\\resource\\images\" />\r\n      <recent name=\"C:\\Users\\hu-19\\Desktop\\main\\src\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"애플리케이션.Main\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" singleton=\"false\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"javaproject.Main\" />\r\n      <module name=\"0324-1\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"javaproject.Service.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"MemMenuS\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"javaproject.Service.MemMenuS\" />\r\n      <module name=\"0324-1\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"javaproject.Service.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"ServerMain\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"javaproject.chat.server.ServerMain\" />\r\n      <module name=\"0324-1\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"javaproject.chat.server.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"애플리케이션.Main\" />\r\n      <item itemvalue=\"애플리케이션.MemMenuS\" />\r\n      <item itemvalue=\"애플리케이션.ServerMain\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"애플리케이션.Main\" />\r\n        <item itemvalue=\"애플리케이션.ServerMain\" />\r\n        <item itemvalue=\"애플리케이션.MemMenuS\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-a94e463ab2e7-intellij.indexing.shared.core-IU-243.26053.27\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-IU-243.26053.27\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"애플리케이션 수준\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"디폴트 작업\">\r\n      <changelist id=\"42c61ecd-fdd4-4c5d-89aa-f62a03fac6a9\" name=\"변경\" comment=\"03241250\" />\r\n      <created>1742946646194</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1742946646194</updated>\r\n      <workItem from=\"1742946647738\" duration=\"17209000\" />\r\n      <workItem from=\"1742975472734\" duration=\"476000\" />\r\n      <workItem from=\"1742975978609\" duration=\"1175000\" />\r\n      <workItem from=\"1743034492453\" duration=\"3312000\" />\r\n      <workItem from=\"1743038098386\" duration=\"10775000\" />\r\n      <workItem from=\"1743063074585\" duration=\"4840000\" />\r\n      <workItem from=\"1743068260538\" duration=\"456000\" />\r\n      <workItem from=\"1743068734138\" duration=\"13168000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"03241250\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"03241250\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/Main.java</url>\r\n          <line>12</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f2c61de9551b47c9ef640490d6110c878785beb8)
+++ b/.idea/workspace.xml	(date 1743486771252)
@@ -11,6 +11,14 @@
   <component name="ChangeListManager">
     <list default="true" id="42c61ecd-fdd4-4c5d-89aa-f62a03fac6a9" name="변경" comment="03241250">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Service/MemMenuS.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Service/MemMenuS.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/chat/gui/ChatClient.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/chat/gui/ChatClient.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/chat/gui/ChatGUI.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/chat/gui/ChatGUI.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/chat/server/CommandManagerV2.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/chat/server/CommandManagerV2.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/chat/server/Server.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/chat/server/Server.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/chat/server/ServerMain.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/chat/server/ServerMain.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/chat/server/Session.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/chat/server/Session.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/chat/util/MyLoggerMain.java" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -92,7 +100,7 @@
   <component name="RunManager" selected="애플리케이션.Main">
     <configuration name="Main" type="Application" factoryName="Application" singleton="false" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="javaproject.Main" />
-      <module name="0324-1" />
+      <module name="main" />
       <extension name="coverage">
         <pattern>
           <option name="PATTERN" value="javaproject.Service.*" />
@@ -166,7 +174,18 @@
       <workItem from="1743063074585" duration="4840000" />
       <workItem from="1743068260538" duration="456000" />
       <workItem from="1743068734138" duration="13168000" />
+      <workItem from="1743119870462" duration="3380000" />
+      <workItem from="1743471143375" duration="9952000" />
     </task>
+    <task id="LOCAL-00001" summary="03241250">
+      <option name="closed" value="true" />
+      <created>1743119976423</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1743119976423</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
